const { Graph } = require("./Graph")

const graph = new Graph()
// graph.addNode("A")
// graph.addNode("B")
// graph.addNode("C")
// graph.addEdge("A", "B")
// graph.addEdge("A", "B")
// graph.addEdge("A", "C")
// graph.addEdge("C", "B")
// graph.toString()

// graph.remove("B")
// console.log("***after remove***")
// graph.toString()

// graph.addNode("A")
// graph.addNode("B")
// graph.addNode("C")
// graph.addNode("D")
// graph.addEdge("A", "B")
// graph.addEdge("B", "D")
// graph.addEdge("D", "C")
// graph.addEdge("A", "C")
// graph.traverseDepthFisrt("A")
// graph.traverseDepthFisrt("C")
// graph.traverseDepthFisrt("G")

// graph.traverseBreadthFisrt("A")

// topological sort of the graph
// graph.addNode("X")
// graph.addNode("A")
// graph.addNode("B")
// graph.addNode("P")
// graph.addEdge("X", "A")
// graph.addEdge("X", "B")
// graph.addEdge("A", "P")
// graph.addEdge("B", "P")
// const topologicalSort = graph.topologicalSort()
// console.log("topologicalSort:", topologicalSort)

// check the graph has cycle ?
graph.addNode("A")
graph.addNode("B")
graph.addNode("C")
graph.addNode("D")
graph.addEdge("A", "B")
graph.addEdge("B", "C")
graph.addEdge("D", "A")
graph.addEdge("C", "A") // that provides a cycle in graph
const hasCycle = graph.hasCycle()
console.log("hasCycle:", hasCycle)
